function applyCase(t,e){if(!t)return"";switch(e){case"uc":return t.toUpperCase();case"lc":return t.toLowerCase();case"ic":return t.charAt(0).toUpperCase()+t.slice(1).toLowerCase();case"sp":return t.split("").map(((t,e)=>e%2==0?t.toUpperCase():t.toLowerCase())).join("");default:return t}}class WFont{constructor(t,e,n=null,o=null){this.name=t,this.url=e,this.style=n,this.opentypeFont=o,this.fullFontName=t,this.loading=!1,this.loaded=!1,this.error=!1,this.computed=null,this.load()}async load(){try{if(this.loaded=!1,this.loading=!0,this.opentypeFont)this.loaded=!0;else if(this.url){const t=new FontFace(this.name,`url(${this.url})`);await t.load(),document.fonts.add(t),this.loaded=!0}else await this.checkLocalFont();waterfall.computeIfReady()}catch(t){this.error=t,console.error("Error loading font:",t)}finally{this.loading=!1}}async checkLocalFont(){const t=document.createElement("canvas").getContext("2d");t.font=`12px "${this.fullFontName}"`,await document.fonts.load(t.font);if(t.measureText("abcdefghijklmnopqrstuvwxyz0123456789").width<=0)throw new Error(`Font "${this.fullFontName}" not available`)}compute(t,e,n,o){const s={},a=document.createElement("canvas").getContext("2d");if(a.font=`${waterfall.fontSize}px "${this.fullFontName}"`,o.length>0){a.font=`${waterfall.fontSize}px "${this.fullFontName}"`,a.textAlign="left",a.textBaseline="alphabetic";const t=o.map((t=>`"${t}" 1`)).join(", ");a.font=a.font.replace(/"/g,""),a.font=`${a.font.split(")")[0]}) ${t}`}for(const o of t){if(!o)continue;let t=applyCase(o,e);if(!t)continue;let i=a.measureText(t).width,l=Math.ceil(i/n)*n;l in s||(s[l]=[]),s[l].includes(t)||s[l].push(t)}this.computed=s,waterfall.updateUI()}setupFont(t,e){if(this.opentypeFont){const e=this.opentypeFont.getPath(text,0,0,waterfall.fontSize);e.fill="black",t.save(),t.translate(0,waterfall.fontSize),e.draw(t),t.restore()}else if(t.font=`${waterfall.fontSize}px "${this.fullFontName}"`,t.textAlign="left",t.textBaseline="alphabetic",e.length>0){const n=e.map((t=>`"${t}" 1`)).join(", ");t.font=`${t.font.split(")")[0]}) ${n}`}}measureTextWidth(t,e){if(this.opentypeFont){const t=this.opentypeFont.getPath(e,0,0,waterfall.fontSize).getBoundingBox();return Math.ceil(t.x2-t.x1)}{const n=t.measureText(e);return Math.ceil(n.width)}}}class Waterfall{constructor(){this.done=!1,this.fontSize=80,this.lineHeight=1,this.casing="ic",this.granularity=5,this.resultsCount=10,this._runlength=500,this.seed=1,this.shiftMode=!1,this.targetWord="",this.dict={loading:!1,loaded:!1,error:!1,manual:!1,dict:null},this.fonts=[],this.features=new Set,console.log("Waterfall instance created"),this.init(),this.fontInput=new FontInput(this),this.currentResultsCount=0,this.currentFont=null,this.filterLetters=[],this.featureDescriptions=new Map}init(){this.loadDict(),this.setupEventListeners()}setupEventListeners(){console.log("Setting up event listeners"),document.addEventListener("keydown",(t=>{t.isComposing||229===t.keyCode||16===t.keyCode&&(this.shiftMode=!0)})),document.addEventListener("keyup",(t=>{16===t.keyCode&&(this.shiftMode=!1)}));const t=document.getElementById("runlength");t&&t.addEventListener("input",(t=>{this.runlength=parseInt(t.target.value),this.updateUI()}));const e=document.getElementById("casing");e&&e.addEventListener("change",(t=>{this.casing=t.target.value,this.computeIfReady()}));const n=document.getElementById("targetWord");n&&n.addEventListener("input",(t=>{const e=t.target.value.trim();this.updateRunlengthFromWord(e)}));const o=document.getElementById("fontUploader");o&&o.addEventListener("change",(t=>{this.loadFonts(t.target.files)}));const s=document.getElementById("dictUploader");s&&s.addEventListener("change",(t=>{this.loadDict(t.target.files[0])}));const a=document.getElementById("resultsCountDisplay");a&&(a.textContent=this.resultsCount,this.updateUI());const i=document.getElementById("letters");i&&i.addEventListener("input",(t=>{this.filterLetters=t.target.value.split(",").map((t=>t.trim().toLowerCase())),this.computeIfReady()}));const l=document.getElementById("loadLocalFonts");l&&l.addEventListener("click",(async()=>{await window.queryLocalFonts()}));const r=document.getElementById("fontUpload");r?r.addEventListener("change",(t=>{console.log("Font file selected");const e=t.target.files[0];e&&this.loadFont(e)})):console.error("Font upload input not found")}async loadDict(t){try{let e;if(this.dict.dict=null,this.dict.loaded=!1,this.dict.error=!1,this.dict.loading=!0,t){if(this.dict.manual=!0,!t.name.endsWith(".txt"))throw new Error("Dictionary file must be .txt. (Reverting to default.)");e=await t.text()}else{this.dict.manual=!1;const t=await fetch("dist/words.txt");if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);e=await t.text()}this.dict.dict=e.split(/\r?\n/),this.dict.loaded=!0,this.computeIfReady()}catch(t){console.error("Error loading dictionary:",t),this.dict.error=t.message}finally{this.dict.loading=!1}}removeFont(t){this.fonts=this.fonts.filter((e=>e.file.name!==t))}async loadFonts(t){for(let e=0;e<t.length;e++){const n=new WFont(t[e]);this.fonts.push(n)}}refresh(){this.seed++,this.computeIfReady(),this.updateUI()}computeIfReady(){this.fonts.every((t=>t.loaded))&&this.dict.loaded&&this.compute()}compute(){console.log("computing");const t=this.getSelectedFeatures();for(const e of this.fonts){const n=this.filterDictionary(this.dict.dict);e.compute(n,this.casing,this.granularity,t)}this.done=!0,this.updateUI()}getSelectedFeatures(){const t=[];return this.features.forEach((e=>{const n=document.getElementById(e);n&&n.checked&&t.push(e)})),console.log("Selected features:",t),t}filterDictionary(t){return 0===this.filterLetters.length?t:t.filter((t=>this.filterLetters.every((e=>t.toLowerCase().includes(e)))))}updateLengthFromWord(){if(this.targetWord&&this.fonts.length>0){const t=document.createElement("canvas").getContext("2d");t.font=`${this.fontSize}px ${this.fonts[0].reference}`;const e=t.measureText(this.targetWord).width;this.runlength=Math.round(e),this.refresh()}}updateRunlengthFromWord(t){if(!this.currentFont||!t)return;const e=document.createElement("canvas").getContext("2d");e.font=`${this.fontSize}px "${this.currentFont.fullFontName}"`;const n=e.measureText(t).width,o=Math.ceil(n);this.runlength=o}updateUI(){const t=document.getElementById("runlength"),e=document.getElementById("runlengthDisplay"),n=document.getElementById("resultsCountDisplay"),o=document.getElementById("results");if(t&&(t.value=this.runlength),e&&(e.textContent=this.runlength),o){o.innerHTML="",this.currentResultsCount=0;const t=this.getSelectedFeatures();for(const e of this.fonts)if(e.computed){this.currentFont=e;const n=e.computed[this.quantizedRunlength]||[];this.currentResultsCount=n.length;const s=document.createElement("div");if(s.style.fontFamily=`"${e.fullFontName}"`,s.style.fontSize=`${this.fontSize}px`,s.style.lineHeight=this.lineHeight,t.length>0){const e=t.map((t=>`"${t}" 1`)).join(", ");s.style.fontFeatureSettings=e}n.length>0?s.innerHTML=n.join("<br>"):(s.innerHTML=this.getPlaceholderText(e.fullFontName),s.style.color="#888",s.style.fontStyle="italic"),o.appendChild(s)}}n&&(n.textContent=this.currentResultsCount)}get quantizedRunlength(){return Math.ceil(this._runlength/this.granularity)*this.granularity}get shiftStep(){return this.shiftMode?10:1}addFont(t,e){const n=new WFont(t,e);this.fonts.push(n),this.computeIfReady()}addLocalFont(t,e,n){const o=new WFont(t,null,n,e);this.fonts=[o],this.updateFeatures(e),this.computeIfReady()}getFontWeight(t){return t&&t.toLowerCase().includes("bold")?"bold":"normal"}get runlength(){return this._runlength}set runlength(t){this._runlength=t,this.updateUI()}getPlaceholderText(t){return"..."}async loadFont(t){console.log("Loading font:",t.name);try{const e=await t.arrayBuffer(),n=await opentype.parse(e);console.log("Font loaded successfully:",n.names.fullName),this.updateFeatures(n)}catch(t){console.error("Error loading font:",t)}}updateFeatures(t){console.log("Updating features for font:",t.names.fullName),this.features.clear(),this.featureDescriptions.clear();const e=t.tables.gsub;e?(console.log("GSUB table found"),e.features.forEach((t=>{console.log("Checking feature:",t.tag),(t.tag.startsWith("ss")||"liga"===t.tag)&&(this.features.add(t.tag),t.name&&this.featureDescriptions.set(t.tag,t.name),console.log("Added feature:",t.tag,t.name))}))):console.log("No GSUB table found in the font"),console.log("Final features set:",Array.from(this.features)),console.log("Feature descriptions:",this.featureDescriptions),this.generateFeatureCheckboxes()}generateFeatureCheckboxes(){console.log("Generating feature checkboxes");const t=document.getElementById("features");if(t){if(t.innerHTML="",0===this.features.size)return console.log("No features to generate checkboxes for"),void(t.textContent="No OpenType features detected");this.features.forEach((e=>{console.log("Creating checkbox for feature:",e);const n=document.createElement("input");n.type="checkbox",n.id=e,n.name=e,n.value="true",n.className="input-checkbox";const o=document.createElement("label");o.htmlFor=e,o.textContent=e.toUpperCase(),o.className="t__xxs";const s=this.featureDescriptions.get(e);s&&(o.title=s),t.appendChild(n),t.appendChild(o),n.addEventListener("change",(()=>{console.log("Feature checkbox changed:",e,n.checked),this.computeIfReady()}))})),console.log("Feature checkboxes generated")}else console.error("Features div not found")}}class FontInput{constructor(t){this.waterfall=t,this.fontUpload=document.getElementById("fontUpload"),this.loadLocalFontsButton=document.getElementById("loadLocalFonts"),this.fontSelectors=document.getElementById("fontSelectors"),this.fontFamilySelector=document.getElementById("fontFamilySelector"),this.fontStyleSelector=document.getElementById("fontStyleSelector"),this.tabs=document.querySelectorAll(".font-input__tab"),this.contents=document.querySelectorAll(".font-input__content"),this.initTabs(),this.initFontUpload(),this.initLoadLocalFontsButton()}initTabs(){this.tabs.forEach((t=>{t.addEventListener("click",(()=>{this.tabs.forEach((t=>t.classList.remove("active"))),this.contents.forEach((t=>t.classList.remove("active"))),t.classList.add("active"),document.getElementById(`${t.dataset.tab}Content`).classList.add("active")}))}))}initFontUpload(){this.fontUpload.addEventListener("change",(t=>{const e=t.target.files[0];if(e){const t=new FileReader;t.onload=t=>{const n=e.name.split(".")[0],o=t.target.result;this.waterfall.addFont(n,o)},t.readAsDataURL(e)}}))}initLoadLocalFontsButton(){"queryLocalFonts"in window?this.loadLocalFontsButton.addEventListener("click",(()=>this.loadLocalFonts())):(this.loadLocalFontsButton.textContent="Font Access API not supported",this.loadLocalFontsButton.disabled=!0)}async loadLocalFonts(){try{const t=await window.queryLocalFonts(),e=new Set;t.forEach((t=>{e.add(t.family)})),this.populateFontFamilySelector(Array.from(e).sort(),t),this.fontFamilySelector.addEventListener("change",(()=>this.updateFontStyleSelector(t))),this.fontStyleSelector.addEventListener("change",(()=>this.updateWaterfallFont(t))),this.loadLocalFontsButton.style.display="none",this.fontSelectors.style.display="block"}catch(t){console.error("Error querying local fonts:",t),this.loadLocalFontsButton.textContent="Error loading fonts"}}populateFontFamilySelector(t,e){this.fontFamilySelector.innerHTML=t.map((t=>`<option value="${t}">${t}</option>`)).join(""),this.updateFontStyleSelector(e)}updateFontStyleSelector(t){const e=this.fontFamilySelector.value,n=t.filter((t=>t.family===e)).map((t=>t.style));this.fontStyleSelector.innerHTML=n.map((t=>`<option value="${t}">${t}</option>`)).join(""),this.updateWaterfallFont(t)}async updateWaterfallFont(t){const e=this.fontFamilySelector.value,n=this.fontStyleSelector.value,o=t.find((t=>t.family===e&&t.style===n));if(o)try{const t=await o.blob(),s=await t.arrayBuffer(),a=opentype.parse(s),i=a.names.postScriptName?.en||a.names.fullName?.en||`${e}-${n}`;console.log("Loading font:",i),this.waterfall.addLocalFont(i,a,n)}catch(t){console.error("Error loading font with OpenType.js:",t)}}}const waterfall=new Waterfall;console.log("Waterfall instance created and event listeners set up");